# -*- mode: Makefile;-*-
.DEFAULT_GOAL := help

MVN_OPTS:=

.PHONY: help default init distclean deinit

# # help is defined in 
# # https://gist.github.com/rcmachado/af3db315e31383502660
help:
	$(info --------------------------------------- )	
	$(info Make Targets)
	$(info --------------------------------------- )
	$(QUIET) awk '/^[a-zA-Z\-\_0-9]+:/ {            \
	  nb = sub( /^## /, "", helpMsg );              \
	  if(nb == 0) {                                 \
	    helpMsg = $$0;                              \
	    nb = sub( /^[^:]*:.* ## /, "", helpMsg );   \
	  }                                             \
	  if (nb)                                       \
	    print  $$1 "\t" helpMsg;                    \
	}                                               \
	{ helpMsg = $$0 }'                              \
	$(MAKEFILE_LIST) | column -ts:


default: help


## Clone Source

ifeq "$(INIT_SRC)" "1"
#init: __init core-build alarm-model-build save-and-restore-build
init: __init

__init:
	git clone $(PS_SRC_GITURL) $(PS_SRC_ROOT)
	cd $(PS_SRC_ROOT) && git checkout $(PS_SRC_TAG)
else
init: __init 

__init:
	$(QUIET)echo "$(PS_SRC_ROOT) exists. make distclean first, if one would like to restart it."
endif

# from: https://stackoverflow.com/questions/47837071/making-make-clean-ask-for-confirmation
distclean.check:
	@echo -n "This will rm -rf $(PS_SRC_ROOT). Are you sure? [y/N] " && read ans && [ $${ans:-N} = y ]

deinit: distclean

## Clean Source
distclean: clean distclean.check
ifneq ($(wildcard $(PS_SRC_ROOT)/.*),)
	$(QUIET)echo "We've found $(PS_SRC_ROOT)"
	$(QUIET)echo "Removing ....."
	$(QUIET)rm -rf $(PS_SRC_ROOT)
else
	$(QUIET)echo "There is no $(PS_SRC_ROOT)."
endif


.PHONY: build build.alarm-server build.alarm-logger build.alarm-config-logger 

build: build.alarm-server build.alarm-logger build.alarm-config-logger

build.alarm-server:
	$(QUIET)mvn -f $(SRC_PATH_SERVER)/pom.xml $(MVN_OPTS) clean install -Dmaven.test.skip=true --also-make 

build.alarm-logger:
	$(QUIET)mvn -f $(SRC_PATH_LOGGER)/pom.xml $(MVN_OPTS) clean install -Dmaven.test.skip=true --also-make 

build.alarm-config-logger:
	$(QUIET)mvn -f $(SRC_PATH_CONFIGLOGGER)/pom.xml $(MVN_OPTS) clean install -Dmaven.test.skip=true --also-make 


restart: restart.alarm-server restart.alarm-logger restart.alarm-config-logger

restart.alarm-server: uninstall.alarm-server build.alarm-server sd_config.alarm-server install.alarm-server sd_start.alarm-server

restart.alarm-logger: uninstall.alarm-logger build.alarm-logger sd_config.alarm-logger install.alarm-logger sd_start.alarm-logger

restart.alarm-config-logger: uninstall.alarm-config-logger build.alarm-config-logger sd_config.alarm-config-logger install.alarm-config-logger sd_start.alarm-config-logger
# .PHONY: build $(SRC_PATHS)


VARS_EXCLUDES+=MVN_OPTS

