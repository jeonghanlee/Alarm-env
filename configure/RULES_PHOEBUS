# -*- mode: Makefile;-*-

JAVAHOME = ${JAVA_HOME}

.PHONY: depverify phoebus build.phoebus

# Phoebus doesn't own phoebus.org, so we cannot download Phoebus snapshot from sonatype,
# So, it is mandatory to build Phoebus first, before we build any of Alarm services.

phoebus:
ifeq "$(JAVAHOME)" ""
	$(QUIET)echo "JAVA_HOME must be defined. "
else
ifeq ($(UNAME_S),Linux)
	$(QUIET)JAVA_HOME=$(JAVA_HOME) $(MAVEN_CMD) -f $(PS_SRC_ROOT)/pom.xml install -Djavafx.platform=linux -DskipTests -Dmaven.test.skip=true
endif
ifeq ($(UNAME_S),Darwin)
	$(QUIET)JAVA_HOME=$(JAVA_HOME) $(MAVEN_CMD) -f $(PS_SRC_ROOT)/pom.xml install -Djavafx.platform=mac -DskipTests -Dmaven.test.skip=true
endif
endif

build.phoebus: depverify phoebus

depverify:
	$(QUIET)JAVA_HOME=$(JAVA_HOME) $(MAVEN_CMD) clean verify -f $(PS_SRC_ROOT)/dependencies/pom.xml

.PHONY: install.phoebus uninstall.phoebus sh.phoebus sh_clean.phoebus prop.phoebus prop_clean.phoebus 

install.phoebus: src_version sh.phoebus
	$(if $(wildcard $(INSTALL_LOCATION_PHOEBUS)), $(QUIET)$(SUDO) mv $(INSTALL_LOCATION_PHOEBUS) $(INSTALL_LOCATION_PHOEBUS)_backup_$$(date +%Y%m%d-%H%M%S))
	$(QUIET)$(SUDO) $(INSTALL) -d $(INSTALL_LOCATION_PHOEBUS)
	$(QUIET)$(SUDO) $(INSTALL_DATA) -b $(PS_SITE_TEMPLATE_PATH)/.versions  $(INSTALL_LOCATION_PHOEBUS)/
	$(QUIET)$(SUDO) $(INSTALL) -m 744 $(SRC_PATH_PHOEBUS)/target/product-*.jar  $(INSTALL_PHOEBUS)
	$(QUIET)$(SUDO) ln -sf $(INSTALL_PHOEBUS) $(INSTALL_LOCATION_PHOEBUS)/product-phoebus.jar
	$(QUIET)$(SUDO) cp -rp $(SRC_PATH_PHOEBUS)/target/lib  $(PS_SITE_TEMPLATE_PATH)/$(PHOEBUS_SETTINGS) $(PS_SITE_TEMPLATE_PATH)/$(PHOEBUS_LOGGING_PROPERTIES) $(PS_SITE_TEMPLATE_PATH)/$(PHOEBUS_LOGBACK) $(SRC_PATH_PHOEBUS)/phoebus.sh $(PS_SITE_TEMPLATE_PATH)/authorization.conf $(INSTALL_LOCATION_PHOEBUS)/
	$(QUIET)$(SUDO) $(INSTALL) -d $(INSTALL_LOCATION_PHOEBUS)/bin
	$(QUIET)$(SUDO) $(INSTALL) -m 755 $(PS_SCRIPTS_PATH)/$(PHOEBUS_SHELL) $(INSTALL_LOCATION_PHOEBUS)/bin
	$(QUIET)$(SUDO) $(INSTALL) -m 644 $(PS_SCRIPTS_PATH)/$(PHOEBUS_ACTIVATE) $(INSTALL_LOCATION_PHOEBUS)/


uninstall.phoebus:
	$(QUIET)echo "Removing $(INSTALL_LOCATION_PHOEBUS)..."
	$(QUIET)$(SUDO) rm -rf $(INSTALL_LOCATION_PHOEBUS)/


sh.phoebus:
	$(QUIET)sed -e "s:@JAVAPATH@:$(JAVA_PATH):g"      \
			-e "s:@JAVAOPTS@:$(PS_JAVA_OPTS):g"   \
		    -e "s:@TARGET_FILENAME@:$(INSTALL_PHOEBUS):g"        \
		    -e "s|@OPTIONS@|$(OPTIONS_PHOEBUS)|g" \
		    < $(PS_SCRIPTS_PATH)/$(PHOEBUS_SHELL).in > $(PS_SCRIPTS_PATH)/$(PHOEBUS_SHELL)
	$(QUIET)chmod +x $(PS_SCRIPTS_PATH)/$(PHOEBUS_SHELL)
	$(QUIET)sed -e "s:@INSTALL_LOCATION_PHOEBUS@:$(INSTALL_LOCATION_PHOEBUS):g"      \
		    < $(PS_SCRIPTS_PATH)/$(PHOEBUS_ACTIVATE).in > $(PS_SCRIPTS_PATH)/$(PHOEBUS_ACTIVATE)


sh_clean.phoebus:
	rm -f $(PS_SCRIPTS_PATH)/$(PHOEBUS_SHELL)

.PHONY: prop.phoebus prop.phoebus.show prop.phoebus.clean

prop.phoebus: $(PHOEBUS_SETTINGS).in
	$(QUIET)echo ">>> Generate $(basename $<) from $<"
	$(QUIET)sed -e "s:@PS_CF_PRTO@:$(PS_CF_PRTO):g" \
		    -e "s:@PS_CF_HOST@:$(PS_CF_HOST):g" \
		    -e "s:@PS_CF_PORT@:$(PS_CF_PORT):g" \
		    -e "s:@PS_AA_HOST@:$(PS_AA_HOST):g" \
		    -e "s|@PS_KAFKA_URL@|$(PS_KAFKA_URL)|g" \
		    -e "s:@PS_MAIN_CONFIG_TOPIC@:$(PS_MAIN_CONFIG_TOPIC):g" \
		    -e "s:@PS_CONFIG_TOPICS@:$(PS_CONFIG_TOPICS):g" \
		    -e "s:@PS_ES_HOST@:$(PS_ES_HOST):g" \
		    -e "s:@PS_ES_PORT@:$(PS_ES_PORT):g" \
		    -e "s:@PS_ES_INDEXS@:$(PS_ES_INDEXS):g" \
		    -e "s:@PS_ES_MAX_SIZE@:$(PS_ES_MAX_SIZE):g" \
		    -e "s:@PS_OG_PRTO@:$(PS_OG_PRTO):g" \
		    -e "s:@PS_OG_HOST@:$(PS_OG_HOST):g" \
		    -e "s:@PS_OG_PORT@:$(PS_OG_PORT):g" \
		    -e "s:@PS_CA_ADDR_LIST@:$(PS_ADDR_LIST):g" \
		    -e "s:@PS_DEFAULT_FILEBROWSER_ROOT@:$(PS_DEFAULT_FILEBROWSER_ROOT):g" \
		    < $< > $(basename $<)

prop.phoebus.clean: $(PHOEBUS_SETTINGS).in
	rm -f $(basename $<)

prop.phoebus.show: $(PHOEBUS_SETTINGS).in
	$(QUIET)cat -b $(basename $<)
