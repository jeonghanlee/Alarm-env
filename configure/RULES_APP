## This rule is for the MacOS only.


ifeq ($(UNAME_S),Darwin)

.PHONY: macapp dmgapp zipapp build.app dmg.app zip.app install.app uninstall.app

## Phoebus.app/Contents/{MacOS,Resources}
## Phoebus.app/jdk
## Phoebus.app/phoebus
## Contents skeleton thanks to https://github.com/thedzy/Run-script-as-an-Applicaiton 

macapp: build.app install.app

dmgapp: build.app dmg.app

zipapp: build.app zip.app

tarapp: build.app tar.app

# somehow, homebrew cannot handle libjli.dylib library properly
# The first directory which @rpath looks for is executable path, so just create a relative symlink in bin
# otool -L Phoebus_arm64.app/jdk/bin/java
# Phoebus_arm64.app/jdk/bin/java:
#	/usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.11)
#	@rpath/libjli.dylib (compatibility version 1.0.0, current version 1.0.0)
#	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0)
#	/System/Library/Frameworks/Security.framework/Versions/A/Security (compatibility version 1.0.0, current version 60158.100.133)
#	/System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices (compatibility version 1.0.0, current version 56.0.0)
#	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1311.100.3)
# However, if we use the JAVA_HOME as /opt/homebrew/opt/openjdk/libexec/openjdk.jdk/Contents/Home
# We don't have this rpath issue
#
build.app: src_version
	$(QUIET)echo "Preparing ... $(MACAPP)"
	$(QUIET)-rm -rf $(MACAPP)/
	$(QUIET)mkdir -p $(MACAPP)/jdk $(MACAPP_TARGET)
	$(QUIET)cp -rp $(MACAPP_TEMPLATE_PATH)/* $(MACAPP)/
	$(QUIET)echo "Copying JDK from $(JAVA_HOME)...."
	$(QUIET)cp -rp $(JAVA_HOME)/* $(MACAPP)/jdk/
	$(QUIET)rm -rf $(MACAPP)/jdk/demo $(MACAPP)/jdk/*.jdk
	$(QUIET)echo "Building $(PS_SRC_NAME) ..."
	$(QUIET)$(INSTALL_DATA) -b $(PS_SITE_TEMPLATE_PATH)/.versions  $(MACAPP_TARGET)/
	$(QUIET)cp $(SRC_PATH_PHOEBUS)/target/product-*.jar  $(MACAPP_TARGET)/product-phoebus.jar
	$(QUIET)cp -r $(SRC_PATH_PHOEBUS)/target/lib  $(PS_SITE_TEMPLATE_PATH)/$(PHOEBUS_SETTINGS) $(PS_SITE_TEMPLATE_PATH)/$(PHOEBUS_LOGGING_PROPERTIES) $(PS_SITE_TEMPLATE_PATH)/$(PHOEBUS_LOGBACK) $(SRC_PATH_PHOEBUS)/phoebus.sh $(PS_SITE_TEMPLATE_PATH)/authorization.conf $(MACAPP_TARGET)/

dmg.app:
	$(QUIET)JAVA_HOME=$(JAVA_HOME) $(JAVAPKG_CMD) --name $(basename $(MACAPP)) --app-image "$(TOP)/$(MACAPP)" --app-version $(PS_SRC_VERSION)

zip.app:
	$(QUIET)rm -f $(TOP)/$(MACAPP).zip
	$(QUIET)echo "Zipping $(MACAPP)...."
	$(QUIET)zip -qr $(TOP)/$(MACAPP).zip $(MACAPP)

tar.app:
	$(QUIET)rm -f $(TOP)/$(basename $(MACAPP)).tar.gz
	$(QUIET)echo "Tar with gziping  $(basename $(MACAPP))...."
	$(QUIET)tar -czf $(basename $(MACAPP)).tar.gz $(MACAPP)
	$(QUIET)echo "$(basename $(MACAPP)).tar.gz in $(TOP)"

install.app: uninstall.app
	$(QUIET)$(SUDO) ditto $(MACAPP) /Applications/$(MACAPP)

uninstall.app:
	$(QUIET)$(SUDO) rm -rf /Applications/$(MACAPP)

endif
